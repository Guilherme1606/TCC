unit Contrato.Model;

interface
uses
  Contrato.Interfaces,
  Due.Utilitarios.Base.Model;

type
  TContratosModel = class(TBaseModel, IContratosModel)
  private
    FID_Contrato: Integer;
    FCPF: String;
    FServico: String;
    FInicio: TDateTime;
    FEntrega: TDateTime;
    FStatus: String;
    FUsuario_Responsavel: Integer;
    FNovoRegistro: Boolean;

    function GetID_Contrato: Integer;
    function GetCPF: String;
    function GetServico: String;
    function GetInicio: TDateTime;
    function GetEntrega: TDateTime;
    function GetStatus: String;
    function GetUsuario_Responsavel: Integer;
    function GetNovoRegistro: Boolean;

    procedure SetID_Contrato(Const Value:Integer);
    procedure SetCPF(const Value: String);
    procedure SetServico(const Value: String);
    procedure SetInicio(const Value: TDateTime);
    procedure SetEntrega(const Value: TDateTime);
    procedure SetStatus(const Value: String);
    procedure SetUsuario_Responsavel(const Value: Integer);
    procedure SetNovoRegistro(const Value: Boolean);
  public
    property ID_Contrato: Integer read getID_Contrato write SetID_Contrato;
    property CPF: String read GetCPF write SetCPF;
    property Servico: String read GetServico write SetServico;
    property Inicio : TDateTime read GetInicio write SetInicio;
    property Entrega: TDateTime read GetEntrega write SetEntrega;
    property Status: String read GetStatus write SetStatus;
    property Usuario_Responsavel: Integer read GetUsuario_Responsavel write SetUsuario_Responsavel;
    property NovoRegistro: Boolean read GetNovoRegistro write SetNovoRegistro;

  end;
implementation

end.
